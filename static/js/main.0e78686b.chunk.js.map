{"version":3,"sources":["AddWatchListButton.js","MovieCard.js","PopularMovies.js","Recomendations.js","MoviePage.js","WatchList.js","App.js","index.js"],"names":["WatchListButton","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inWatchList","Boolean","id","localStorage","deleteFromWatchList","bind","assertThisInitialized","addToWatchList","removeItem","setState","setItem","title","react_default","a","createElement","onClick","React","Component","Wrapper","styled","div","_templateObject","Image","img","_templateObject2","MovieCard","className","src","imgSrc","alt","Link","to","concat","AddWatchListButton","allGenres","filter","genre","genres","includes","map","name","join","Gallery","PopularMovies_templateObject","Header","header","PopularMovies_templateObject2","PopularMovies","pages","movies","searchString","genresLoaded","handleSearch","fetchMoreData","_this2","urlPopularMovies","fetch","then","res","json","data","results","target","_ref","value","_this3","error","_this4","type","placeholder","onChange","lib_default","dataLength","length","next","hasMore","movie","toUpperCase","src_MovieCard","genre_ids","key","poster_path","Recomendations","isLoaded","recomendations","url","original_title","Content","MoviePage_templateObject","MoviePage","movieDetails","movieId","overview","src_Recomendations","WatchList","watchList","i","obj","getItem","push","App","moviesLoaded","popularMovies","BrowserRouter","basename","process","Route","exact","path","render","src_PopularMovies","src_MoviePage","match","params","component","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0e78686b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass WatchListButton extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inWatchList: Boolean(this.props.id in localStorage)\r\n    };\r\n    this.deleteFromWatchList = this.deleteFromWatchList.bind(this);\r\n    this.addToWatchList = this.addToWatchList.bind(this);\r\n  }\r\n  deleteFromWatchList() {\r\n    localStorage.removeItem(this.props.id);\r\n    this.setState({ inWatchList: false });\r\n  }\r\n  addToWatchList() {\r\n    localStorage.setItem(this.props.id, this.props.title);\r\n    this.setState({ inWatchList: true });\r\n  }\r\n  render() {\r\n    if (this.state.inWatchList) {\r\n      return (\r\n        <button onClick={this.deleteFromWatchList}>\r\n          Delete from watchlist\r\n        </button>\r\n      );\r\n    } else {\r\n      return <button onClick={this.addToWatchList}>Add to watch list</button>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default WatchListButton;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport WatchListButton from \"./AddWatchListButton\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 40%;\r\n  margin: 0 4% 20px 4%;\r\n  border: 2px solid #333;\r\n  border-radius: 4px;\r\n`;\r\nconst Image = styled.img`\r\n  float: left;\r\n`;\r\nclass MovieCard extends React.Component {\r\n  render() {\r\n    return (\r\n      <Wrapper className=\"movie-card\">\r\n        <Image src={this.props.imgSrc} alt={this.props.title} />\r\n        <Link to={`/movie/${this.props.id}`}>\r\n          <h2>{this.props.title}</h2>\r\n        </Link>\r\n        <WatchListButton id={this.props.id} title={this.props.title} />\r\n        <p>\r\n          {this.props.allGenres\r\n            .filter(genre => this.props.genres.includes(genre.id))\r\n            .map(genre => genre.name)\r\n            .join(\", \")}\r\n        </p>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieCard;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport { Link } from \"react-router-dom\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nconst Gallery = styled.div`\r\n  max-width: 1100px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\nconst Header = styled.header`\r\n  margin: 0 auto;\r\n  max-width: 1200px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\nclass PopularMovies extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pages: 2,\r\n      movies: this.props.movies,\r\n      searchString: \"\",\r\n      allGenres: [],\r\n      genresLoaded: false\r\n    };\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n    this.fetchMoreData = this.fetchMoreData.bind(this);\r\n  }\r\n\r\n  fetchMoreData() {\r\n    const urlPopularMovies =\r\n      \"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=98135c4d3cc392347281f8d007876760&language=en-US&page=\" +\r\n      this.state.pages;\r\n\r\n    fetch(urlPopularMovies)\r\n      .then(res => res.json())\r\n      .then(data =>\r\n        this.setState({\r\n          movies: this.state.movies.concat(data.results),\r\n          pages: this.state.pages + 1\r\n        })\r\n      );\r\n  }\r\n\r\n  handleSearch({ target }) {\r\n    this.setState({ searchString: target.value });\r\n  }\r\n  componentDidMount() {\r\n    //prettier-ignore\r\n    const urlGenres =\"https://api.themoviedb.org/3/genre/movie/list?api_key=98135c4d3cc392347281f8d007876760&language=en-US\";\r\n    fetch(urlGenres)\r\n      .then(res => res.json())\r\n      .then(\r\n        data => {\r\n          this.setState({\r\n            genresLoaded: true,\r\n            allGenres: data.genres\r\n          });\r\n        },\r\n        error => {\r\n          this.setState({\r\n            genresLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (!this.state.genresLoaded) {\r\n      return <h2>Loading...</h2>;\r\n    } else {\r\n      return (\r\n        <div className=\"content\">\r\n          <Header>\r\n            <Link to=\"/watchlist\">Watch list</Link>\r\n            <h1>Movies</h1>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"type title...\"\r\n              value={this.state.searchString}\r\n              onChange={this.handleSearch}\r\n            />\r\n          </Header>\r\n          <InfiniteScroll\r\n            dataLength={this.state.movies.length}\r\n            next={this.fetchMoreData}\r\n            hasMore={true}\r\n            //loader={<h4>Loading...</h4>}\r\n          >\r\n            <Gallery>\r\n              {this.state.movies\r\n                .filter(movie =>\r\n                  movie.title\r\n                    .toUpperCase()\r\n                    .includes(this.state.searchString.toUpperCase())\r\n                )\r\n                .map(movie => (\r\n                  <MovieCard\r\n                    allGenres={this.state.allGenres}\r\n                    genres={movie.genre_ids}\r\n                    id={movie.id}\r\n                    key={movie.id}\r\n                    title={movie.title}\r\n                    imgSrc={`https://image.tmdb.org/t/p/w154/${\r\n                      movie.poster_path\r\n                    }`}\r\n                  />\r\n                ))}\r\n            </Gallery>\r\n          </InfiniteScroll>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default PopularMovies;\r\n","import React from \"react\";\r\n\r\nclass Recomendations extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoaded: false,\r\n      recomendations: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    //prettier-ignore\r\n    const url = `https://api.themoviedb.org/3/movie/${this.props.id}/recommendations?api_key=98135c4d3cc392347281f8d007876760&language=en-US&page=1`;\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(\r\n        data => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            recomendations: data.results\r\n          });\r\n        },\r\n        error => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.isLoaded) {\r\n      return <h4>Loading...</h4>;\r\n    } else {\r\n      return (\r\n        <section>\r\n          <h3>Recomendations</h3>\r\n          {this.state.recomendations\r\n            .map(movie => movie.original_title)\r\n            .join(\", \")}\r\n        </section>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Recomendations;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport WatchListButton from \"./AddWatchListButton\";\r\nimport Recomendations from \"./Recomendations\";\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nclass MoviePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      movieDetails: {}\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    //prettier-ignore\r\n    const url = `https://api.themoviedb.org/3/movie/${this.props.movieId}?api_key=98135c4d3cc392347281f8d007876760&language=en-US`;\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(\r\n        data => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            movieDetails: data\r\n          });\r\n        },\r\n        error => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (!this.state.isLoaded) {\r\n      return <h2>Loading...</h2>;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <header>\r\n            <h1>{this.state.movieDetails.title}</h1>\r\n          </header>\r\n          <Content>\r\n            <aside>\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w300/${\r\n                  this.state.movieDetails.poster_path\r\n                }`}\r\n                alt={`${this.state.movieDetails.title} poster`}\r\n              />\r\n            </aside>\r\n            <content>\r\n              <section>\r\n                <h3>Overview</h3>\r\n                <p>{this.state.movieDetails.overview}</p>\r\n              </section>\r\n              <section>\r\n                <h3>Genre</h3>\r\n                <p>\r\n                  {this.state.movieDetails.genres\r\n                    .map(genre => genre.name)\r\n                    .join(\", \")}\r\n                </p>\r\n              </section>\r\n              <Recomendations id={this.state.movieDetails.id} />\r\n              <WatchListButton\r\n                id={this.state.movieDetails.id}\r\n                title={this.state.movieDetails.title}\r\n              />\r\n            </content>\r\n          </Content>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default MoviePage;\r\n","import React from \"react\";\r\nimport WatchListButton from \"./AddWatchListButton\";\r\n\r\nclass WatchList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      watchList: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    let watchList = [];\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n      let obj = {\r\n        id: localStorage.key(i),\r\n        title: localStorage.getItem(localStorage.key(i))\r\n      };\r\n      watchList.push(obj);\r\n    }\r\n    this.setState({ watchList });\r\n  }\r\n  render() {\r\n    if (localStorage.length === 0) {\r\n      return <h2>Watch list is empty</h2>;\r\n    } else {\r\n      return (\r\n        <ul>\r\n          {this.state.watchList.map(movie => (\r\n            <li key={movie.id}>\r\n              {movie.title}{\" \"}\r\n              <WatchListButton id={movie.id} title={movie.title} />{\" \"}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default WatchList;\r\n","import React from \"react\";\r\nimport PopularMovies from \"./PopularMovies\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport MoviePage from \"./MoviePage\";\r\nimport WatchList from \"./WatchList\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      moviesLoaded: false,\r\n\r\n      error: null,\r\n      popularMovies: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //prettier-ignore\r\n    const urlPopularMovies = \"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=98135c4d3cc392347281f8d007876760&language=en-US\";\r\n\r\n    fetch(urlPopularMovies)\r\n      .then(res => res.json())\r\n      .then(\r\n        data => {\r\n          this.setState({\r\n            moviesLoaded: true,\r\n            popularMovies: data.results\r\n          });\r\n        },\r\n        error => {\r\n          this.setState({\r\n            moviesLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (!this.state.moviesLoaded) {\r\n      return <h2>Loading...</h2>;\r\n    } else {\r\n      return (\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n          <div>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={() => <PopularMovies movies={this.state.popularMovies} />}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/movie/:id\"\r\n              render={props => <MoviePage movieId={props.match.params.id} />}\r\n            />\r\n            <Route exact path=\"/watchlist\" component={WatchList} />\r\n          </div>\r\n        </BrowserRouter>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default App;\r\n//render(<App />, document.getElementById(\"root\"));\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}